{"version":3,"sources":["webpack:///./js/getGeoPosition.js","webpack:///./js/fetchWeather.js","webpack:///./index.js"],"names":["getGeoPosition","options","maximumAge","Math","pow","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","fetchWeather","query","fetch","then","response","json","refs","form","document","querySelector","location","temperature","humidity","wind","conditions","icon","markupPage","obj","setAttribute","current","condition","text","addContent","name","temp_c","wind_kph","classList","remove","ref","content","textContent","position","coords","latitude","longitude","catch","PNotify","error","addEventListener","e","preventDefault","input","currentTarget","city","value","console"],"mappings":"6JASeA,uBARQ,WACrB,IAAMC,EAAU,CACdC,WAAgB,EAAIC,KAAKC,IAAI,GAAI,IAEnC,OAAO,IAAIC,QAAQ,SAACC,EAASC,GAC3BC,UAAUC,YAAYC,mBAAmBJ,EAASC,EAAQN,OCS7CU,EAbI,SAAAC,GAQjB,OAAOC,MANI,+EAIuCD,GAEJE,KAAK,SAAAC,GAAQ,OACzDA,EAASC,UCLTC,EAAO,CACXC,KAAMC,SAASC,cAAc,gBAC7BC,SAAUF,SAASC,cAAc,2BACjCE,YAAaH,SAASC,cAAc,uBACpCG,SAAUJ,SAASC,cAAc,2BACjCI,KAAML,SAASC,cAAc,uBAC7BK,WAAYN,SAASC,cAAc,6BACnCM,KAAMP,SAASC,cAAc,UA4B/B,SAASO,EAAWC,GAClBX,EAAKS,KAAKG,aAAa,MAAOD,EAAIE,QAAQC,UAAUC,MACpDf,EAAKS,KAAKG,aAAa,MAAvB,SAAuCD,EAAIE,QAAQC,UAAUL,MAC7DO,EAAWhB,EAAKI,SAAUO,EAAIP,SAASa,MACvCD,EAAWhB,EAAKK,YAAN,GAAsBM,EAAIE,QAAQK,QAC5CF,EAAWhB,EAAKM,SAAaK,EAAIE,QAAQP,SAA/B,MACVU,EAAWhB,EAAKO,KAASI,EAAIE,QAAQM,SAA3B,QACVH,EAAWhB,EAAKQ,WAAYG,EAAIE,QAAQC,UAAUC,MAClDb,SAASC,cAAc,YAAYiB,UAAUC,OAAO,aAGtD,SAASL,EAAWM,EAAKC,GACvBD,EAAIE,YAAcD,EArCpBxC,IACGc,KAAK,SAAA4B,GACJ,IAAMC,EAASD,EAASC,OACxB,OAAOhC,EAAgBgC,EAAOC,SAAX,IAAuBD,EAAOE,aAElD/B,KAAK,SAAAC,GAAQ,OAAIY,EAAWZ,KAC5B+B,MAAM,WACLC,IAAQC,MAAM,CACZhB,KAAM,wEAIZf,EAAKC,KAAK+B,iBAAiB,SAE3B,SAAqBC,GACnBA,EAAEC,iBACF,IACMC,EADOF,EAAEG,cACIC,KACb1C,EAAQwC,EAAMG,MACpB5C,EAAaC,GACVE,KAAK,SAAAC,GAAQ,OAAIY,EAAWZ,KAC5B+B,MAAM,SAAAE,GAAK,OAAIQ,QAAQR,MAAMA,KAChCI,EAAMG,MAAQ","file":"main.ffafd92dfed35b516f7d.js","sourcesContent":["'use strict';\r\nconst getGeoPosition = () => {\r\n  const options = {\r\n    maximumAge: (1, 8 * Math.pow(10, 6)),\r\n  };\r\n  return new Promise((resolve, reject) => {\r\n    navigator.geolocation.getCurrentPosition(resolve, reject, options);\r\n  });\r\n};\r\nexport default getGeoPosition;","// dc66446195534889876100922191907 my Key\r\n  \r\nconst fetchWeather = query => {\r\n    const options = {\r\n      baseUrl: 'https://api.apixu.com/v1/current.json',\r\n      apiKey: 'dc66446195534889876100922191907',\r\n    };\r\n  \r\n    const requestParams = `?key=${options.apiKey}&q=${query}`;\r\n  \r\n    return fetch(options.baseUrl + requestParams).then(response =>\r\n      response.json(),\r\n    );\r\n  };\r\n  \r\n  export default fetchWeather;","import './styles.css';\nimport PNotify from '../node_modules/pnotify/dist/es/PNotify';\nimport getGeoPosition from './js/getGeoPosition';\nimport fetchWeather from './js/fetchWeather';\n\n\nconst refs = {\n  form: document.querySelector('#search-form'),\n  location: document.querySelector('[data-field=\"location\"]'),\n  temperature: document.querySelector('[data-field=\"temp\"]'),\n  humidity: document.querySelector('[data-field=\"humidity\"]'),\n  wind: document.querySelector('[data-field=\"wind\"]'),\n  conditions: document.querySelector('[data-field=\"conditions\"]'),\n  icon: document.querySelector('.icon'),\n};\n\ngetGeoPosition()\n  .then(position => {\n    const coords = position.coords;\n    return fetchWeather(`${coords.latitude},${coords.longitude}`);\n  })\n  .then(response => markupPage(response))\n  .catch(() => {\n    PNotify.error({\n      text: 'Нет прав доступа к геопозиции, используйте поиск по имени города.',\n    });\n  });\n\nrefs.form.addEventListener('submit', formHandler);\n\nfunction formHandler(e) {\n  e.preventDefault();\n  const form = e.currentTarget;\n  const input = form.city;\n  const query = input.value;\n  fetchWeather(query)\n    .then(response => markupPage(response))\n    .catch(error => console.error(error));\n  input.value = '';\n}\n\nfunction markupPage(obj) {\n  refs.icon.setAttribute('alt', obj.current.condition.text);\n  refs.icon.setAttribute('src', `https:${obj.current.condition.icon}`);\n  addContent(refs.location, obj.location.name);\n  addContent(refs.temperature, `${obj.current.temp_c}`);\n  addContent(refs.humidity, `${obj.current.humidity} %`);\n  addContent(refs.wind, `${obj.current.wind_kph} kph`);\n  addContent(refs.conditions, obj.current.condition.text);\n  document.querySelector('#weather').classList.remove('is-hidden');\n}\n\nfunction addContent(ref, content) {\n  ref.textContent = content;\n}"],"sourceRoot":""}